/* Darkfall Depths - –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã –∏ –∏–≥—Ä–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ */

// ==================== –ö–û–ù–°–¢–ê–ù–¢–´ –ò –ù–ê–°–¢–†–û–ô–ö–ò ====================
export const TILE_SIZE = 32;
export const MAP_SIZE = 60; // –±—ã–ª–æ 50
export const ROOM_MIN_SIZE = 8; // –±—ã–ª–æ 6
export const ROOM_MAX_SIZE = 16; // –±—ã–ª–æ 12
export const MIN_ROOMS = 10; // –±—ã–ª–æ 8
export const MAX_ROOMS = 15; // –±—ã–ª–æ 12
export const FPS_TARGET = 60;
export const FRAME_TIME = 1000 / FPS_TARGET;

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Ç–∞—á —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ
export const IS_MOBILE = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent) || window.innerWidth <= 768;

// ==================== –ò–ì–†–û–í–´–ï –î–ê–ù–ù–´–ï ====================
// –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–µ—à–∞ - $(date)
export const CHARACTERS = [
  {
    id: 'dimon',
    name: 'Dimon',
    class: 'mage',
    description: '–ú–∞–≥ –¥–∞–ª—å–Ω–µ–≥–æ –±–æ—è —Å –∞–≤—Ç–æ–Ω–∞—Ü–µ–ª–∏–≤–∞–Ω–∏–µ–º —Å–Ω–∞—Ä—è–¥–æ–≤',
    hp: 80,
    maxHp: 80,
    damage: 15,
    moveSpeed: 70,
    attackSpeed: 1.2,
    attackRadius: 200,
    defense: 2,
    crit: 5,
    type: 'ranged',
    projectileSpeed: 300,
    color: '#9b59b6',
    sprite: 'üîÆ',
    // –£–Ω–∏–∫–∞–ª—å–Ω–∞—è —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å: –í–∑—Ä—ã–≤–Ω–∞—è –≤–æ–ª–Ω–∞
    hasBlast: true,
    blastCooldown: 12.0,
    blastRadius: 120,
    blastDamage: 40
  },
  {
    id: 'andre',
    name: 'Andre',
    class: 'warrior',
    description: '–ú–æ—â–Ω—ã–π –≤–æ–∏–Ω –±–ª–∏–∂–Ω–µ–≥–æ –±–æ—è —Å –≤—ã—Å–æ–∫–∏–º–∏ HP –∏ –∑–∞—â–∏—Ç–æ–π',
    hp: 140,
    maxHp: 140,
    damage: 18,
    moveSpeed: 75,
    attackSpeed: 1.0,
    attackRadius: 64,
    defense: 8,
    crit: 0,
    type: 'melee',
    color: '#e74c3c',
    sprite: '‚öîÔ∏è',
    // –£–Ω–∏–∫–∞–ª—å–Ω–∞—è —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å: –©–∏—Ç
    hasShield: true,
    shieldCooldown: 8.0,
    shieldDuration: 4.0,
    shieldDefenseBonus: 15
  },
  {
    id: 'tim',
    name: 'Tim',
    class: 'rogue',
    description: '–ë—ã—Å—Ç—Ä—ã–π —Ä–∞–∑–±–æ–π–Ω–∏–∫ —Å dash —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å—é',
    hp: 85,
    maxHp: 85,
    damage: 25,
    moveSpeed: 110,
    attackSpeed: 0.7,
    attackRadius: 56,
    defense: 2,
    crit: 15,
    type: 'melee',
    hasDash: true,
    dashCooldown: 3.0,
    dashDistance: 80,
    color: '#27ae60',
    sprite: 'üó°Ô∏è'
  }
];

export const ENEMY_TYPES = [
  { 
    type: 'Skeleton', 
    hp: 30, 
    damage: 18, 
    speed: 60, 
    attackRange: 48, 
    color: '#bdc3c7', 
    reward: 10,
    sprite: 'üíÄ'
  },
  { 
    type: 'Dark Mage', 
    hp: 25, 
    damage: 12, 
    speed: 45, 
    attackRange: 150, 
    color: '#8e44ad', 
    reward: 15,
    sprite: 'üßô‚Äç‚ôÇÔ∏è',
    projectileSpeed: 200
  },
  { 
    type: 'Orc Warrior', 
    hp: 45, 
    damage: 22, 
    speed: 50, 
    attackRange: 48, 
    color: '#27ae60', 
    reward: 20,
    sprite: 'üëπ'
  },
  { 
    type: 'Shadow Assassin', 
    hp: 35, 
    damage: 25, 
    speed: 80, 
    attackRange: 48, 
    color: '#2c3e50', 
    reward: 25,
    sprite: 'üë§',
    levelRequirement: 5
  },
  { 
    type: 'Demon Lord', 
    hp: 80, 
    damage: 35, 
    speed: 40, 
    attackRange: 200, 
    color: '#e74c3c', 
    reward: 50,
    sprite: 'üëø',
    projectileSpeed: 250,
    levelRequirement: 10
  },
  { 
    type: 'Ancient Guardian', 
    hp: 120, 
    damage: 30, 
    speed: 35, 
    attackRange: 48, 
    color: '#f39c12', 
    reward: 40,
    sprite: 'üõ°Ô∏è',
    levelRequirement: 8
  }
];

// ==================== –°–ò–°–¢–ï–ú–ê –ü–†–ï–î–ú–ï–¢–û–í ====================
export const BASE_ITEMS = [
  // –í–æ–∏–Ω
  { base: 'sword', name: '–ú–µ—á', class: 'warrior', icon: '‚öîÔ∏è', color: '#e67e22', type: 'weapon', minRadius: 56, maxRadius: 72 },
  { base: 'axe', name: '–¢–æ–ø–æ—Ä', class: 'warrior', icon: 'ü™ì', color: '#b87333', type: 'weapon', minRadius: 56, maxRadius: 72 },
  { base: 'shield', name: '–©–∏—Ç', class: 'warrior', icon: 'üõ°Ô∏è', color: '#95a5a6', type: 'armor' },
  // –ú–∞–≥
  { base: 'staff', name: '–ü–æ—Å–æ—Ö', class: 'mage', icon: 'ü™Ñ', color: '#8e44ad', type: 'weapon', minRadius: 120, maxRadius: 180 },
  { base: 'wand', name: '–ñ–µ–∑–ª', class: 'mage', icon: '‚ú®', color: '#9b59b6', type: 'weapon', minRadius: 100, maxRadius: 160 },
  { base: 'robe', name: '–ú–∞–Ω—Ç–∏—è', class: 'mage', icon: 'üß•', color: '#6c3483', type: 'armor' },
  // –†–∞–∑–±–æ–π–Ω–∏–∫
  { base: 'dagger', name: '–ö–∏–Ω–∂–∞–ª', class: 'rogue', icon: 'üó°Ô∏è', color: '#27ae60', type: 'weapon', minRadius: 40, maxRadius: 56 },
  { base: 'crossbow', name: '–ê—Ä–±–∞–ª–µ—Ç', class: 'rogue', icon: 'üèπ', color: '#34495e', type: 'weapon', minRadius: 80, maxRadius: 120 },
  { base: 'leather', name: '–ö–æ–∂–∞–Ω–∞—è –±—Ä–æ–Ω—è', class: 'rogue', icon: 'ü•ã', color: '#d35400', type: 'armor' },
  // –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–µ
  { base: 'amulet', name: '–ê–º—É–ª–µ—Ç', class: null, icon: 'üìø', color: '#f39c12', type: 'accessory' },
  { base: 'ring', name: '–ö–æ–ª—å—Ü–æ', class: null, icon: 'üíç', color: '#e67e22', type: 'accessory' },
  { base: 'potion', name: '–ó–µ–ª—å–µ –∑–¥–æ—Ä–æ–≤—å—è', class: null, icon: 'üß™', color: '#e74c3c', type: 'consumable' },
  { base: 'speed_potion', name: '–ó–µ–ª—å–µ —Å–∫–æ—Ä–æ—Å—Ç–∏', class: null, icon: 'üí®', color: '#3498db', type: 'consumable' },
  { base: 'strength_potion', name: '–ó–µ–ª—å–µ —Å–∏–ª—ã', class: null, icon: 'üí™', color: '#e67e22', type: 'consumable' },
  { base: 'defense_potion', name: '–ó–µ–ª—å–µ –∑–∞—â–∏—Ç—ã', class: null, icon: 'üõ°Ô∏è', color: '#95a5a6', type: 'consumable' },
  { base: 'regen_potion', name: '–ó–µ–ª—å–µ —Ä–µ–≥–µ–Ω–µ—Ä–∞—Ü–∏–∏', class: null, icon: 'üíö', color: '#27ae60', type: 'consumable' },
  { base: 'combo_potion', name: '–ö–æ–º–ø–ª–µ–∫—Å–Ω–æ–µ –∑–µ–ª—å–µ', class: null, icon: 'üåà', color: '#9b59b6', type: 'consumable' }
];

export const AFFIXES = [
  { key: 'damage', name: '–£—Ä–æ–Ω', min: 5, max: 30 },
  { key: 'crit', name: '–ö—Ä–∏—Ç', min: 2, max: 15 },
  { key: 'defense', name: '–ó–∞—â–∏—Ç–∞', min: 2, max: 15 },
  { key: 'maxHp', name: 'HP', min: 10, max: 60 },
  { key: 'moveSpeed', name: '–°–∫–æ—Ä–æ—Å—Ç—å', min: 5, max: 30 },
  { key: 'attackSpeed', name: '–°–∫–æ—Ä–æ—Å—Ç—å –∞—Ç–∞–∫–∏', min: 5, max: 25 },
  { key: 'attackRadius', name: '–î–∞–ª—å–Ω–æ—Å—Ç—å –∞—Ç–∞–∫–∏', min: 10, max: 50 },
  { key: 'fire', name: '–û–≥–æ–Ω—å', min: 5, max: 20 },
  { key: 'ice', name: '–õ—ë–¥', min: 5, max: 20 }
];

export const RARITIES = [
  { key: 'common', name: '–û–±—ã—á–Ω—ã–π', color: '#95a5a6', chance: 0.6 },
  { key: 'rare', name: '–†–µ–¥–∫–∏–π', color: '#3498db', chance: 0.3 },
  { key: 'epic', name: '–≠–ø–∏–∫', color: '#e67e22', chance: 0.09 },
  { key: 'legendary', name: '–õ–µ–≥–µ–Ω–¥–∞—Ä–Ω—ã–π', color: '#e74c3c', chance: 0.01 }
];

// ==================== –ì–ï–ù–ï–†–ê–¶–ò–Ø –ü–†–ï–î–ú–ï–¢–û–í ====================
export function generateRandomItem(level, playerClass) {
  // 1. –°–Ω–∞—á–∞–ª–∞ –≤—ã–±–∏—Ä–∞–µ–º –±–∞–∑—É —Å —É—á—ë—Ç–æ–º –∫–ª–∞—Å—Å–∞
  let pool = BASE_ITEMS.filter(it => !it.class || it.class === playerClass);
  // 10% —à–∞–Ω—Å –Ω–∞ "–Ω–µ —Å–≤–æ–π" –ø—Ä–µ–¥–º–µ—Ç
  if (Math.random() < 0.1) pool = BASE_ITEMS;
  const base = pool[Math.floor(Math.random() * pool.length)];
  
  // 2. –†–µ–¥–∫–æ—Å—Ç—å
  let rarity = RARITIES[0];
  const roll = Math.random();
  let acc = 0;
  for (const r of RARITIES) {
    acc += r.chance + level * 0.01; // —à–∞–Ω—Å —Ä–∞—Å—Ç—ë—Ç —Å —É—Ä–æ–≤–Ω–µ–º
    if (roll < acc) { rarity = r; break; }
  }
  
  // 3. –ê—Ñ—Ñ–∏–∫—Å—ã
  const affixCount = rarity.key === 'legendary' ? 3 : rarity.key === 'epic' ? 2 : rarity.key === 'rare' ? 1 : 0;
  const affixes = {};
  let used = new Set();
  for (let i = 0; i < affixCount; ++i) {
    let aff;
    do { aff = AFFIXES[Math.floor(Math.random() * AFFIXES.length)]; } while (used.has(aff.key));
    used.add(aff.key);
    let value = Math.floor(aff.min + (aff.max - aff.min) * (0.5 + 0.5 * Math.random()) * (0.7 + 0.3 * level/20));
    affixes[aff.key] = value;
  }
  
  // 4. –ë–æ–Ω—É—Å—ã –ø–æ —Ç–∏–ø—É
  let bonus = { ...affixes };
  if (base.type === 'weapon') {
    bonus.damage = (bonus.damage || 0) + Math.floor(8 + level * 2 + (rarity.key === 'legendary' ? 10 : 0));
    if (base.base === 'staff' || base.base === 'wand') bonus.crit = (bonus.crit || 0) + Math.floor(level/2);
  }
  if (base.type === 'armor') {
    bonus.defense = (bonus.defense || 0) + Math.floor(4 + level + (rarity.key === 'legendary' ? 6 : 0));
    bonus.maxHp = (bonus.maxHp || 0) + Math.floor(10 + level * 2);
  }
  if (base.type === 'accessory') {
    bonus.moveSpeed = (bonus.moveSpeed || 0) + Math.floor(3 + level);
  }
  if (base.type === 'consumable') {
    // –†–∞–∑–Ω—ã–µ —Ç–∏–ø—ã –±–∞–Ω–æ–∫ —Å —Ä–∞–∑–Ω—ã–º–∏ —ç—Ñ—Ñ–µ–∫—Ç–∞–º–∏
    switch (base.base) {
      case 'potion':
        // –û–±—ã—á–Ω–æ–µ –∑–µ–ª—å–µ –∑–¥–æ—Ä–æ–≤—å—è - –º–≥–Ω–æ–≤–µ–Ω–Ω–æ–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ
        bonus.heal = 40 + Math.floor(level * 2.5);
        break;
      case 'speed_potion':
        // –ó–µ–ª—å–µ —Å–∫–æ—Ä–æ—Å—Ç–∏ - –≤—Ä–µ–º–µ–Ω–Ω—ã–π –±–∞—Ñ—Ñ
        bonus.moveSpeed = 20 + Math.floor(level * 1.5);
        bonus.duration = 15; // 15 —Å–µ–∫—É–Ω–¥
        break;
      case 'strength_potion':
        // –ó–µ–ª—å–µ —Å–∏–ª—ã - –≤—Ä–µ–º–µ–Ω–Ω—ã–π –±–∞—Ñ—Ñ —É—Ä–æ–Ω–∞
        bonus.damage = 15 + Math.floor(level * 2);
        bonus.duration = 20; // 20 —Å–µ–∫—É–Ω–¥
        break;
      case 'defense_potion':
        // –ó–µ–ª—å–µ –∑–∞—â–∏—Ç—ã - –≤—Ä–µ–º–µ–Ω–Ω—ã–π –±–∞—Ñ—Ñ –∑–∞—â–∏—Ç—ã
        bonus.defense = 10 + Math.floor(level * 1.5);
        bonus.duration = 18; // 18 —Å–µ–∫—É–Ω–¥
        break;
      case 'regen_potion':
        // –ó–µ–ª—å–µ —Ä–µ–≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ - –ø–æ—Å—Ç–µ–ø–µ–Ω–Ω–æ–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ
        bonus.heal = 60 + Math.floor(level * 3);
        bonus.regenDuration = 8; // 8 —Å–µ–∫—É–Ω–¥ —Ä–µ–≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
        bonus.regenTick = 2; // –∫–∞–∂–¥—ã–µ 2 —Å–µ–∫—É–Ω–¥—ã
        break;
      case 'combo_potion':
        // –ö–æ–º–ø–ª–µ–∫—Å–Ω–æ–µ –∑–µ–ª—å–µ - –Ω–µ—Å–∫–æ–ª—å–∫–æ —ç—Ñ—Ñ–µ–∫—Ç–æ–≤
        bonus.heal = 30 + Math.floor(level * 2);
        bonus.damage = 10 + Math.floor(level * 1.5);
        bonus.moveSpeed = 15 + Math.floor(level * 1);
        bonus.duration = 12; // 12 —Å–µ–∫—É–Ω–¥
        break;
      default:
        bonus.heal = 40 + Math.floor(level * 2.5);
    }
  }
  
  // 5. –†–∞–¥–∏—É—Å –¥–ª—è –º–∏–ª–∏—à–Ω–∏–∫–æ–≤
  let attackRadius = base.minRadius || 48;
  if (base.class === 'warrior') attackRadius = Math.floor(64 + level * 1.2);
  if (base.class === 'rogue') attackRadius = Math.floor(40 + level * 0.7);
  
  // –î–æ–±–∞–≤–ª—è–µ–º attackRadius –≤ bonus –¥–ª—è –æ—Ä—É–∂–∏—è
  if (base.type === 'weapon') {
    bonus.attackRadius = attackRadius;
  }
  
  // 6. –ù–∞–∑–≤–∞–Ω–∏–µ
  let name = base.name;
  if (affixCount > 0) name = `${rarity.name} ${name}`;
  
  // 7. –û–ø–∏—Å–∞–Ω–∏–µ
  let description = '';
  if (base.type === 'consumable') {
    // –î–ª—è –∑–µ–ª–∏–π –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —ç—Ñ—Ñ–µ–∫—Ç—ã –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞
    switch (base.base) {
      case 'potion':
        description = `–í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç ${bonus.heal} –∑–¥–æ—Ä–æ–≤—å—è`;
        break;
      case 'speed_potion':
        description = `–°–∫–æ—Ä–æ—Å—Ç—å +${bonus.moveSpeed} –Ω–∞ ${bonus.duration}—Å`;
        break;
      case 'strength_potion':
        description = `–£—Ä–æ–Ω +${bonus.damage} –Ω–∞ ${bonus.duration}—Å`;
        break;
      case 'defense_potion':
        description = `–ó–∞—â–∏—Ç–∞ +${bonus.defense} –Ω–∞ ${bonus.duration}—Å`;
        break;
      case 'regen_potion':
        description = `–†–µ–≥–µ–Ω–µ—Ä–∞—Ü–∏—è ${bonus.heal} HP –∑–∞ ${bonus.regenDuration}—Å`;
        break;
      case 'combo_potion':
        const effects = [];
        if (bonus.heal) effects.push(`HP +${bonus.heal}`);
        if (bonus.damage) effects.push(`–£—Ä–æ–Ω +${bonus.damage}`);
        if (bonus.moveSpeed) effects.push(`–°–∫–æ—Ä–æ—Å—Ç—å +${bonus.moveSpeed}`);
        description = `${effects.join(', ')} –Ω–∞ ${bonus.duration}—Å`;
        break;
      default:
        description = `–í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç ${bonus.heal} –∑–¥–æ—Ä–æ–≤—å—è`;
    }
  } else {
    // –î–ª—è –¥—Ä—É–≥–∏—Ö –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å–µ –±–æ–Ω—É—Å—ã
    description = Object.entries(bonus).map(([k,v]) => {
      if (k === 'attackRadius') return `–î–∞–ª—å–Ω–æ—Å—Ç—å –∞—Ç–∞–∫–∏: ${v}`;
      return `${AFFIXES.find(a=>a.key===k)?.name||k}: +${v}`;
    }).join(', ');
  }
  
  // –ì–∞—Ä–∞–Ω—Ç–∏—è: consumable –≤—Å–µ–≥–¥–∞ üß™, weapon ‚Äî —Ç–æ–ª—å–∫–æ –æ—Ä—É–∂–µ–π–Ω—ã–µ –∏–∫–æ–Ω–∫–∏
  let icon = base.icon;
  if (base.type === 'consumable') icon = 'üß™';
  if (base.type === 'weapon') {
    // –¢–æ–ª—å–∫–æ –æ—Ä—É–∂–µ–π–Ω—ã–µ –∏–∫–æ–Ω–∫–∏
    const weaponIcons = ['‚öîÔ∏è','ü™ì','ü™Ñ','‚ú®','üó°Ô∏è','üèπ'];
    if (!weaponIcons.includes(base.icon)) icon = '‚öîÔ∏è';
  }
  if (base.type === 'armor') {
    const armorIcons = ['üõ°Ô∏è','ü•ã','üß•','‚õëÔ∏è'];
    if (!armorIcons.includes(base.icon)) icon = 'üõ°Ô∏è';
  }
  if (base.type === 'accessory') {
    const accIcons = ['üíç','üìø','üí®'];
    if (!accIcons.includes(base.icon)) icon = 'üíç';
  }
  
  return {
    name,
    base: base.base,
    class: base.class,
    type: base.type,
    bonus,
    rarity: rarity.key,
    color: rarity.color,
    icon,
    description,
    attackRadius
  };
} // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–µ—à–∞ - Fri Aug  1 19:38:58 MSK 2025
