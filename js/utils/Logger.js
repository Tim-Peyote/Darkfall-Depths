/* Darkfall Depths - –°–∏—Å—Ç–µ–º–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è */

// –ì–ª–æ–±–∞–ª—å–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
const LOG_LEVEL = {
  ERROR: 0,
  WARN: 1,
  INFO: 2,
  DEBUG: 3
};

// –¢–µ–∫—É—â–∏–π —É—Ä–æ–≤–µ–Ω—å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è (ERROR –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞)
let currentLogLevel = LOG_LEVEL.ERROR;

export class Logger {
  static setLogLevel(level) {
    currentLogLevel = level;
  }
  
  static error(...args) {
    if (currentLogLevel >= LOG_LEVEL.ERROR) {
      console.error('‚ùå', ...args);
    }
  }
  
  static warn(...args) {
    if (currentLogLevel >= LOG_LEVEL.WARN) {
      console.warn('‚ö†Ô∏è', ...args);
    }
  }
  
  static info(...args) {
    if (currentLogLevel >= LOG_LEVEL.INFO) {
      console.log('‚ÑπÔ∏è', ...args);
    }
  }
  
  static debug(...args) {
    if (currentLogLevel >= LOG_LEVEL.DEBUG) {
      console.log('üîç', ...args);
    }
  }
  
  // –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –º–µ—Ç–æ–¥—ã –¥–ª—è –∏–≥—Ä–æ–≤—ã—Ö —Å–æ–±—ã—Ç–∏–π (—Ç–æ–ª—å–∫–æ –¥–ª—è –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –æ—à–∏–±–æ–∫ –≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ)
  static game(...args) {
    if (currentLogLevel >= LOG_LEVEL.ERROR) {
      console.error('üéÆ', ...args);
    }
  }
  
  static audio(...args) {
    if (currentLogLevel >= LOG_LEVEL.WARN) {
      console.warn('üéµ', ...args);
    }
  }
  
  static map(...args) {
    if (currentLogLevel >= LOG_LEVEL.ERROR) {
      console.error('üó∫Ô∏è', ...args);
    }
  }
  
  static ui(...args) {
    if (currentLogLevel >= LOG_LEVEL.ERROR) {
      console.error('üñ•Ô∏è', ...args);
    }
  }
  
  // –ú–µ—Ç–æ–¥ –¥–ª—è –æ—Ç–∫–ª—é—á–µ–Ω–∏—è –≤—Å–µ—Ö –ª–æ–≥–æ–≤ (–ø—Ä–æ–¥–∞–∫—à–µ–Ω)
  static disable() {
    currentLogLevel = -1;
  }
  
  // –ú–µ—Ç–æ–¥ –¥–ª—è –≤–∫–ª—é—á–µ–Ω–∏—è –≤—Å–µ—Ö –ª–æ–≥–æ–≤ (—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞)
  static enableAll() {
    currentLogLevel = LOG_LEVEL.DEBUG;
  }
  
  // –ú–µ—Ç–æ–¥ –¥–ª—è –≤–∫–ª—é—á–µ–Ω–∏—è —Ç–æ–ª—å–∫–æ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –ª–æ–≥–æ–≤ (–ø—Ä–æ–¥–∞–∫—à–µ–Ω)
  static enableProduction() {
    currentLogLevel = LOG_LEVEL.ERROR;
  }
}
